
 <!DOCTYPE HTML>
<html lang="zh-Hans">
<head>
  <meta charset="UTF-8">
  
    <title>香蕉的个人博客</title>
    <meta name="viewport" content="width=device-width, initial-scale=1,user-scalable=no">
    
    <meta name="author" content="Hundred Wang">
    

    
    <meta property="og:type" content="website">
<meta property="og:title" content="香蕉的个人博客">
<meta property="og:url" content="http://www.hundredone.win/page/2/index.html">
<meta property="og:site_name" content="香蕉的个人博客">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="香蕉的个人博客">

    
    <link rel="alternative" href="/atom.xml" title="香蕉的个人博客" type="application/atom+xml">
    
    
    <link rel="icon" href="/img/fauthor32.ico">
    
    
    <link rel="apple-touch-icon" href="/img/author114.jpg">
    <link rel="apple-touch-icon-precomposed" href="/img/author114.jpg">
    
    <link rel="stylesheet" href="/css/style.css">
</head>

  <body>
    <header>
      
<div>
		
			<div id="imglogo">
				<a href="/"><img src="/img/logo.png" alt="香蕉的个人博客" title="香蕉的个人博客"/></a>
			</div>
			
			<div id="textlogo">
				<h1 class="site-name"><a href="/" title="香蕉的个人博客">香蕉的个人博客</a></h1>
				<h2 class="blog-motto">用卑微的视角,为浩瀚的科技大海共享一份绵薄之力</h2>
			</div>
			<div class="navbar"><a class="navbutton navmobile" href="#" title="菜单">
			</a></div>
			<nav class="animated">
				<ul>
					<ul>
					 
						<li><a href="/">Home</a></li>
					
						<li><a href="/archives">Archives</a></li>
					
						<li><a href="/about">About</a></li>
					
						<li><a href="/tags">tags</a></li>
					
						<li><a href="/categories">categories</a></li>
					
					<li>
 					
					<form class="search" action="//google.com/search" method="get" accept-charset="utf-8">
						<label>Search</label>
						<input type="search" id="search" name="q" autocomplete="off" maxlength="20" placeholder="搜索" />
						<input type="hidden" name="q" value="site:www.hundredone.win">
					</form>
					
					</li>
				</ul>
			</nav>			
</div>
    </header>
    <div id="container">
      <div id="main">

   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/IOS黑魔法/IOS开发(黑魔法)--Method-Swizzling/" title="IOS开发(黑魔法)--Method-Swizzling" itemprop="url">IOS开发(黑魔法)--Method-Swizzling</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <blockquote>
<p><strong>前言-需求</strong></p>
</blockquote>
<p>就拿我们公司项目来说吧，我们公司是做导航的，而且项目规模比较大，各个控制器功能都已经实现。突然有一天老大过来，说我们要在所有页面添加统计功能，也就是用户进入这个页面就统计一次。我们会想到下面的一些方法：</p>
<hr>
<h3 id="手动添加"><a href="#手动添加" class="headerlink" title="手动添加"></a><strong>手动添加</strong></h3><p>直接简单粗暴的在每个控制器中加入统计，复制、粘贴、复制、粘贴…上面这种方法太Low了，消耗时间而且以后非常难以维护，会让后面的开发人员骂死的。</p>
<hr>
<h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a><strong>继承</strong></h3><p>我们可以使用OOP的特性之一，继承的方式来解决这个问题。创建一个基类，在这个基类中添加统计方法，其他类都继承自这个基类。</p>
<p>然而，这种方式修改还是很大，而且定制性很差。以后有新人加入之后，都要嘱咐其继承自这个基类，所以这种方式并不可取。</p>
<hr>
<h3 id="Category"><a href="#Category" class="headerlink" title="Category"></a><strong>Category</strong></h3><p>我们可以为UIViewController建一个Category，然后在所有控制器中引入这个Category。当然我们也可以添加一个PCH文件，然后将这个Category添加到PCH文件中。</p>
<p>我们创建一个Category来覆盖系统方法，系统会优先调用Category中的代码，然后在调用原类中的代码。</p>
<p>我们可以通过下面的这段伪代码来看一下：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"UIViewController+EventGather.h"</span></span></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIViewController</span> (<span class="title">EventGather</span>)</span></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">   <span class="built_in">NSLog</span>(<span class="string">@"页面统计:%@"</span>, <span class="keyword">self</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<h3 id="回到正题，我们的主角-Method-Swizzling"><a href="#回到正题，我们的主角-Method-Swizzling" class="headerlink" title="回到正题，我们的主角 - Method Swizzling"></a>回到正题，我们的主角 - Method Swizzling</h3></blockquote>
<hr>
<h3 id="Method-Swizzling"><a href="#Method-Swizzling" class="headerlink" title="Method Swizzling"></a><strong>Method Swizzling</strong></h3><p>我们可以使用苹果的“黑魔法”Method Swizzling，Method Swizzling本质上就是对IMP和SEL进行交换。</p>
<hr>
<h3 id="Method-Swizzling原理"><a href="#Method-Swizzling原理" class="headerlink" title="Method Swizzling原理"></a><strong>Method Swizzling原理</strong></h3><p>Method Swizzing是发生在运行时的，主要用于在运行时将两个Method进行交换，我们可以将Method Swizzling代码写到任何地方，但是只有在这段Method Swilzzling代码执行完毕之后互换才起作用。</p>
<p>而且Method Swizzling也是iOS中AOP(面相切面编程)的一种实现方式，我们可以利用苹果这一特性来实现AOP编程。</p>
<p>首先，让我们通过两张图片来了解一下Method Swizzling的实现原理</p>
<p><img src="http://ww2.sinaimg.cn/mw690/006yX0Ypgw1f9ptl6dqcpj30fe09awfq.jpg" alt="图1"></p>
<p><img src="http://ww2.sinaimg.cn/mw690/006yX0Ypgw1f9ptl8gt47j30fb0ee40l.jpg" alt="图2"></p>
<p>上面图一中selector2原本对应着IMP2，但是为了更方便的实现特定业务需求，我们在图二中添加了selector3和IMP3，并且让selector2指向了IMP3，而selector3则指向了IMP2，这样就实现了“方法互换”。</p>
<p>在OC语言的runtime特性中，调用一个对象的方法就是给这个对象发送消息。是通过查找接收消息对象的方法列表，从方法列表中查找对应的SEL，这个SEL对应着一个IMP(一个IMP可以对应多个SEL)，通过这个IMP找到对应的方法调用。</p>
<p>在每个类中都有一个Dispatch Table，这个Dispatch Table本质是将类中的SEL和IMP(可以理解为函数指针)进行对应。而我们的Method Swizzling就是对这个table进行了操作，让SEL对应另一个IMP。</p>
<hr>
<h3 id="Method-Swizzling使用"><a href="#Method-Swizzling使用" class="headerlink" title="Method Swizzling使用"></a><strong>Method Swizzling使用</strong></h3><p>在实现Method Swizzling时，核心代码主要就是一个runtime的C语言API：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">OBJC_EXPORT void method_exchangeImplementations(<span class="function"><span class="keyword">Method</span> <span class="title">m1</span>, <span class="title">Method</span> <span class="title">m2</span>) </span></div><div class="line"> __<span class="title">OSX_AVAILABLE_STARTING</span><span class="params">(__MAC_10_5, __IPHONE_2_0)</span>;</div></pre></td></tr></table></figure>
<p><strong>实现思路</strong><br>  就拿上面我们说的页面统计的需求来说吧，这个需求在很多公司都很常见，我们下面的Demo就通过Method Swizzling简单的实现这个需求。</p>
<p>  我们先给UIViewController添加一个Category，然后在Category中的+(void)load方法中添加Method Swizzling方法，我们用来替换的方法也写在这个Category中。由于load类方法是程序运行时这个类被加载到内存中就调用的一个方法，执行比较早，并且不需要我们手动调用。而且这个方法具有唯一性，也就是只会被调用一次，不用担心资源抢夺的问题。</p>
<p>  定义Method Swizzling中我们自定义的方法时，需要注意尽量加前缀，以防止和其他地方命名冲突，Method Swizzling的替换方法命名一定要是唯一的，至少在被替换的类中必须是唯一的。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"UIViewController+swizzling.h"</span></span></div><div class="line"><span class="meta">#import @implementation UIViewController (swizzling)</span></div><div class="line"> </div><div class="line">+ (<span class="keyword">void</span>)load &#123;</div><div class="line">    [<span class="keyword">super</span> load];</div><div class="line">    <span class="comment">// 通过class_getInstanceMethod()函数从当前对象中的method list获取method结构体，如果是类方法就使用class_getClassMethod()函数获取。</span></div><div class="line">    Method fromMethod = class_getInstanceMethod([<span class="keyword">self</span> <span class="keyword">class</span>], <span class="keyword">@selector</span>(viewDidLoad));</div><div class="line">    Method toMethod = class_getInstanceMethod([<span class="keyword">self</span> <span class="keyword">class</span>], <span class="keyword">@selector</span>(swizzlingViewDidLoad));</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *  我们在这里使用class_addMethod()函数对Method Swizzling做了一层验证，如果self没有实现被交换的方法，会导致失败。</div><div class="line">     *  而且self没有交换的方法实现，但是父类有这个方法，这样就会调用父类的方法，结果就不是我们想要的结果了。</div><div class="line">     *  所以我们在这里通过class_addMethod()的验证，如果self实现了这个方法，class_addMethod()函数将会返回NO，我们就可以对其进行交换了。</div><div class="line">     */</div><div class="line">    <span class="keyword">if</span> (!class_addMethod([<span class="keyword">self</span> <span class="keyword">class</span>], <span class="keyword">@selector</span>(viewDidLoad), method_getImplementation(toMethod), method_getTypeEncoding(toMethod))) &#123;</div><div class="line">        method_exchangeImplementations(fromMethod, toMethod);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">// 我们自己实现的方法，也就是和self的viewDidLoad方法进行交换的方法。</span></div><div class="line">- (<span class="keyword">void</span>)swizzlingViewDidLoad &#123;</div><div class="line">    <span class="built_in">NSString</span> *str = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, <span class="keyword">self</span>.class];</div><div class="line">    <span class="comment">// 我们在这里加一个判断，将系统的UIViewController的对象剔除掉</span></div><div class="line">    <span class="keyword">if</span>(![str containsString:<span class="string">@"UI"</span>])&#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"统计打点 : %@"</span>, <span class="keyword">self</span>.class);</div><div class="line">    &#125;</div><div class="line">    [<span class="keyword">self</span> swizzlingViewDidLoad];</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<p>看到上面的代码，肯定有人会问：楼主，你太粗心了，你在swizzlingViewDidLoad方法中又调用了[self swizzlingViewDidLoad];，这难道不会产生递归调用吗？<br>答：然而….并不会????。</p>
<p>还记得我们上面的图一和图二吗？Method Swizzling的实现原理可以理解为”方法互换“。假设我们将A和B两个方法进行互换，向A方法发送消息时执行的却是B方法，向B方法发送消息时执行的是A方法。</p>
<p>例如我们上面的代码，系统调用UIViewController的viewDidLoad方法时，实际上执行的是我们实现的swizzlingViewDidLoad方法。而我们在swizzlingViewDidLoad方法内部调用[self swizzlingViewDidLoad];时，执行的是UIViewController的viewDidLoad方法。</p>
<hr>
<p><strong>Method Swizzling类簇</strong></p>
<p>之前我也说到，在我们项目开发过程中，经常因为NSArray数组越界或者NSDictionary的key或者value值为nil等问题导致的崩溃，对于这些问题苹果并不会报一个警告，而是直接崩溃，感觉苹果这样确实有点“太狠了”。</p>
<p>由此，我们可以根据上面所学，对NSArray、NSMutableArray、NSDictionary、NSMutableDictionary等类进行Method Swizzling，实现方式还是按照上面的例子来做。但是….你发现Method Swizzling根本就不起作用，代码也没写错啊，到底是什么鬼？</p>
<p>这是因为Method Swizzling对NSArray这些的类簇是不起作用的。因为这些类簇类，其实是一种抽象工厂的设计模式。抽象工厂内部有很多其它继承自当前类的子类，抽象工厂类会根据不同情况，创建不同的抽象对象来进行使用。例如我们调用NSArray的objectAtIndex:方法，这个类会在方法内部判断，内部创建不同抽象类进行操作。</p>
<p>所以也就是我们对NSArray类进行操作其实只是对父类进行了操作，在NSArray内部会创建其他子类来执行操作，真正执行操作的并不是NSArray自身，所以我们应该对其“真身”进行操作。<br>下面我们实现了防止NSArray因为调用objectAtIndex:方法，取下标时数组越界导致的崩溃：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"NSArray+LXZArray.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"objc/runtime.h"</span></span></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSArray</span> (<span class="title">LXZArray</span>)</span></div><div class="line">+ (<span class="keyword">void</span>)load &#123;</div><div class="line">    [<span class="keyword">super</span> load];</div><div class="line">    Method fromMethod = class_getInstanceMethod(objc_getClass(<span class="string">"__NSArrayI"</span>), <span class="keyword">@selector</span>(objectAtIndex:));</div><div class="line">    Method toMethod = class_getInstanceMethod(objc_getClass(<span class="string">"__NSArrayI"</span>), <span class="keyword">@selector</span>(lxz_objectAtIndex:));</div><div class="line">    method_exchangeImplementations(fromMethod, toMethod);</div><div class="line">&#125;</div><div class="line"> </div><div class="line">- (<span class="keyword">id</span>)lxz_objectAtIndex:(<span class="built_in">NSUInteger</span>)index &#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.count<span class="number">-1</span> &lt; index) &#123;</div><div class="line">        <span class="comment">// 这里做一下异常处理，不然都不知道出错了。</span></div><div class="line">        <span class="keyword">@try</span> &#123;</div><div class="line">            <span class="keyword">return</span> [<span class="keyword">self</span> lxz_objectAtIndex:index];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</div><div class="line">            <span class="comment">// 在崩溃后会打印崩溃信息，方便我们调试。</span></div><div class="line">            <span class="built_in">NSLog</span>(<span class="string">@"---------- %s Crash Because Method %s  ----------\n"</span>, class_getName(<span class="keyword">self</span>.class), __func__);</div><div class="line">            <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, [exception callStackSymbols]);</div><div class="line">            <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">        <span class="keyword">@finally</span> &#123;&#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> [<span class="keyword">self</span> lxz_objectAtIndex:index];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<p>大家发现了吗，__NSArrayI才是NSArray真正的类，而NSMutableArray又不一样????。我们可以通过runtime函数获取真正的类：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">objc_getClass</span><span class="params">(<span class="string">"__NSArrayI"</span>)</span></span></div></pre></td></tr></table></figure></p>
<p>下面我们列举一些常用的类簇的“真身”:</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-71bd162da078ce91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="真身"></p>
<hr>
<p><strong>Method Swizzling封装</strong><br>在项目中我们肯定会在很多地方用到Method Swizzling，而且在使用这个特性时有很多需要注意的地方。我们可以将Method Swizzling封装起来，也可以使用一些比较成熟的第三方。在这里我推荐Github上星最多的一个第三方－<a href="https://github.com/rentzsch/jrswizzle" target="_blank" rel="external">jrswizzle</a><br>里面核心就两个类，代码看起来非常清爽。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">#import</span> <span class="comment">@interface NSObject (JRSwizzle)</span></div><div class="line">+ (<span class="keyword">BOOL)jr_swizzleMethod:(SEL)origSel_ </span>withMethod:(<span class="keyword">SEL)altSel_ </span>error:(NSError**)error_<span class="comment">;</span></div><div class="line">+ (<span class="keyword">BOOL)jr_swizzleClassMethod:(SEL)origSel_ </span>withClassMethod:(<span class="keyword">SEL)altSel_ </span>error:(NSError**)error_<span class="comment">;</span></div><div class="line"><span class="comment">@end</span></div><div class="line"> </div><div class="line">// MethodSwizzle类</div><div class="line"><span class="symbol">#import</span> <span class="keyword">BOOL </span>ClassMethodSwizzle(Class klass, <span class="keyword">SEL </span>origSel, <span class="keyword">SEL </span>altSel)<span class="comment">;</span></div><div class="line"><span class="keyword">BOOL </span>MethodSwizzle(Class klass, <span class="keyword">SEL </span>origSel, <span class="keyword">SEL </span>altSel)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p><strong>Method Swizzling危险吗？</strong><br>既然Method Swizzling可以对这个类的Dispatch Table进行操作，操作后的结果对所有当前类及子类都会产生影响，所以有人认为Method Swizzling是一种危险的技术，用不好很容易导致一些不可预见的bug，这些bug一般都是非常难发现和调试的。这个问题可以引用<a href="http://blog.csdn.net/yiyaaixuexi" target="_blank" rel="external">念茜</a>大神的一句话：使用 Method Swizzling 编程就好比切菜时使用锋利的刀，一些人因为担心切到自己所以害怕锋利的刀具，可是事实上，使用钝刀往往更容易出事，而利刀更为安全。</p>
<blockquote>
<p>作者信息</p>
</blockquote>
<p>如果有不足或者错误的地方还望各位读者批评指正，可以评论留言，笔者收到后第一时间回复。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">具体信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">QQ/微信</td>
<td style="text-align:center">hundreda</td>
</tr>
<tr>
<td style="text-align:center">简书号连接</td>
<td style="text-align:center"><a href="http://www.jianshu.com/users/a3ae6d7c68b6/latest_articles" target="_blank" rel="external">iOS-香蕉大大</a></td>
</tr>
<tr>
<td style="text-align:center">GitHub个人开源主页</td>
<td style="text-align:center"><a href="https://github.com/OneHundredSir" target="_blank" rel="external">GitHub连接</a></td>
</tr>
<tr>
<td style="text-align:center">好心人赏我个<code>赞</code></td>
<td style="text-align:center"><code>欢迎各位前来查看，star,感谢各位的阅读</code></td>
</tr>
<tr>
<td style="text-align:center">个人iOS开发QQ讨论群</td>
<td style="text-align:center"><strong>365204530</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>群内规矩</code></td>
<td style="text-align:center"><code>聊天扯淡，讨论技术都行，没有什么群规，不懂就问</code></td>
</tr>
<tr>
<td style="text-align:center">iOS开发类微信订阅号</td>
<td style="text-align:center"><strong>大大家的IOS说</strong></td>
</tr>
<tr>
<td style="text-align:center"><em>微信扫一扫下面二维码</em></td>
<td style="text-align:center"><code>一起用碎片时间学习IOS吧</code></td>
</tr>
</tbody>
</table>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-755d908f00d77cf8.gif?imageMogr2/auto-orient/strip" alt="微信个人技术订阅号"><br>喜欢的朋友可以赏我2块大洋买糖吃～你的打赏是我前进的动力~一起做一个乐于分享的人吧~</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS进阶/">iOS进阶</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS黑魔法/">iOS黑魔法</a><a href="/tags/runtime/">runtime</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>






   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/IOS黑魔法/IOS开发-获取唯一UUID的方法(2016最全含demo）/" title="获取唯一UUID的方法(2016最全含demo）" itemprop="url">获取唯一UUID的方法(2016最全含demo）</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <p>文章最后附上本次讲解的Demo以及演示动态图：<a href="https://github.com/OneHundredSir/BaseOCTest/tree/getMACandWebCheck" target="_blank" rel="external">GithubDemo</a></p>
<ul>
<li>在很多需要限制一台设备一个账号的应用中经常会用到,在Symbian时代,我们是使用IMEI作为设备的唯一标识的,可惜的是Apple官方不允许开发者获得设备的IMEI.</li>
<li>在开发过程中，我们经常会被要求获取每个设备的唯一标示，以便后台做相应的处理。</li>
<li>我们来看看有哪些方法来获取设备的唯一标示，然后再分析下这些方法的利弊。<br><strong>具体可以分为如下几种：</strong></li>
<li>1、UDID</li>
<li>2、IDFA</li>
<li>3、IDFV</li>
<li>4、MAC(已经被禁用，除了5.0以前，哪位大神还在用此等上古神器)</li>
<li>5、keychain(这个最好，没时间的看客可以直接看这个)</li>
<li></li>
</ul>
<hr>
<h1 id="1、UDID"><a href="#1、UDID" class="headerlink" title="1、UDID"></a>1、UDID</h1><h3 id="什么是UDID"><a href="#什么是UDID" class="headerlink" title="什么是UDID"></a><strong>什么是UDID</strong></h3><p>UDID 「Unique Device Identifier Description」是由子母和数字组成的40个字符串的序号，用来区别每一个唯一的iOS设备，包括 iPhones, iPads, 以及 iPod touches，这些编码看起来是随机的，实际上是跟硬件设备特点相联系的，另外你可以到iTunes，pp助手或itools等软件查看你的udid（设备标识）</p>
<p>如下图所示：</p>
<p><img src="http://ww2.sinaimg.cn/mw690/006yX0Ypgw1f9ptfkp452j30rc0e9gor.jpg" alt="itools图片，请看设备标识码"></p>
<h3 id="UDID是用来干什么的？"><a href="#UDID是用来干什么的？" class="headerlink" title="UDID是用来干什么的？"></a><strong>UDID是用来干什么的？</strong></h3><p>UDID可以关联其它各种数据到相关设备上。例如，连接到开发者账号，可以允许在发布前让设备安装或测试应用；也可以让开发者获得iOS测试版进行体验。苹果用UDID连接到苹果的ID，这些设备可以自动下载和安装从App Store购买的应用、保存从iTunes购买的音乐、帮助苹果发送推送通知、即时消息。 在iOS 应用早期，UDID被第三方应用开发者和网络广告商用来收集用户数据，可以用来关联地址、记录应用使用习惯……以便推送精准广告。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">大多数应用都会用到苹果设备的UDID号，UDID通常有以下两种用途：</div><div class="line"></div><div class="line"><span class="number">1</span>）用于一些统计与分析目的；【第三方统计工具如友盟，广告商如ADMOB等】</div><div class="line"></div><div class="line"><span class="number">2</span>）将UDID作为用户ID来唯一识别用户，省去用户名，密码等注册过程。</div></pre></td></tr></table></figure></p>
<h3 id="为什么苹果反对开发人员使用UDID？"><a href="#为什么苹果反对开发人员使用UDID？" class="headerlink" title="为什么苹果反对开发人员使用UDID？"></a><strong>为什么苹果反对开发人员使用UDID？</strong></h3><p>iOS 2.0版本以后UIDevice提供一个获取设备唯一标识符的方法uniqueIdentifier，通过该方法我们可以获取设备的序列号，这个也是目前为止唯一可以确认唯一的标示符。 许多开发者把UDID跟用户的真实姓名、密码、住址、其它数据关联起来；网络窥探者会从多个应用收集这些数据，然后顺藤摸瓜得到这个人的许多隐私数据。同时大部分应用确实在频繁传输UDID和私人信息。 为了避免集体诉讼，苹果最终决定在iOS 5 的时候，将这一惯例废除，开发者被引导生成一个唯一的标识符，只能检测应用程序，其他的信息不提供。<strong>现在应用试图获取UDID已被禁止且不允许上架。</strong><br>所以这个方法作废。</p>
<h1 id="2、IDFA"><a href="#2、IDFA" class="headerlink" title="2、IDFA"></a>2、IDFA</h1><h3 id="什么是IDFA"><a href="#什么是IDFA" class="headerlink" title="什么是IDFA"></a><strong>什么是IDFA</strong></h3><ul>
<li>全名：advertisingIdentifier</li>
<li><p>获取代码：</p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#import &lt;AdSupport/AdSupport.h</div><div class="line"> NSString *adId = <span class="comment">[<span class="comment">[<span class="comment">[ASIdentifierManager sharedManager]</span> advertisingIdentifier]</span> UUIDString]</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>来源：<strong>iOS6.0</strong>及以后</p>
</li>
<li><p>说明：直译就是广告id， 在同一个设备上的所有App都会取到相同的值，是苹果专门给各广告提供商用来追踪用户而设的，用户可以在 设置|隐私|广告追踪 里重置此id的值，或限制此id的使用，故此id有可能会取不到值，但好在Apple默认是允许追踪的，而且一般用户都不知道有这么个设置，所以基本上用来监测推广效果，是戳戳有余了。</p>
</li>
<li><p>注意：<strong>由于idfa会出现取不到的情况，故绝不可以作为业务分析的主id，来识别用户。</strong></p>
</li>
</ul>
<h1 id="3、IDFV"><a href="#3、IDFV" class="headerlink" title="3、IDFV"></a>3、IDFV</h1><h3 id="什么是IDFV"><a href="#什么是IDFV" class="headerlink" title="什么是IDFV"></a><strong>什么是IDFV</strong></h3><ul>
<li>全名：identifierForVendor</li>
<li><p>获取代码：</p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">NSString *idfv = <span class="comment">[<span class="comment">[<span class="comment">[UIDevice currentDevice]</span> identifierForVendor]</span> UUIDString]</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>来源：<strong>iOS6.0</strong>及以后</p>
</li>
<li><p>说明：顾名思义，是给Vendor标识用户用的，每个设备在所属同一个Vender的应用里，都有相同的值。其中的Vender是指应用提供商，但准确点说，是通过BundleID的反转的前两部分进行匹配，如果相同就是同一个Vender，例如对于com.taobao.app1, com.taobao.app2 这两个BundleID来说，就属于同一个Vender，共享同一个idfv的值。和idfa不同的是，idfv的值是一定能取到的，所以非常适合于作为内部用户行为分析的主id，来标识用户，替代OpenUDID。</p>
</li>
<li><p>注意：<strong>如果用户将属于此Vender的所有App卸载，则idfv的值会被重置，即再重装此Vender的App，idfv的值和之前不同。</strong></p>
</li>
<li><p><strong>所以要做唯一识别码的直接可以忽略此方法</strong></p>
</li>
</ul>
<h1 id="4、MAC"><a href="#4、MAC" class="headerlink" title="4、MAC"></a>4、MAC</h1><h3 id="什么是MAC"><a href="#什么是MAC" class="headerlink" title="什么是MAC"></a><strong>什么是MAC</strong></h3><ul>
<li>MAC就是我们常说的设备唯一识别码，这个识别码对我们来说可以作为判断设备的重要信息</li>
<li><p>使用WiFi的mac地址来取代已经废弃了的uniqueIdentifier方法。具体可见连接地址：<a href="http://stackoverflow.com/questions/677530/how-can-i-programmatically-get-the-mac-address-of-an-iphone" target="_blank" rel="external">WIFI-MAC方法</a></p>
</li>
<li><p>实现方法</p>
</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ios5 sdk中的获取方法:</div><div class="line"></div><div class="line">[<span class="built_in">UIDevice</span> currentDevice] uniqueIdentifier]</div><div class="line"></div><div class="line">uniqueIdentifier在<span class="built_in">UIDevice</span>.h中的定义如下:</div><div class="line"></div><div class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>,<span class="keyword">retain</span>) <span class="built_in">NSString</span>    *uniqueIdentifier  __OSX_AVAILABLE_BUT_DEPRECATED(__MAC_NA,__MAC_NA,__IPHONE_2_0,__IPHONE_5_0); <span class="comment">// a string unique to each device based on various hardware info.</span></div></pre></td></tr></table></figure>
<ul>
<li>这个是一个5年前的获取mac的demo我就不写了，因为我也没有5.0系统手机，也懒得用模拟器<br>demo下载：<a href="https://github.com/gekitz/UIDevice-with-UniqueIdentifier-for-iOS-5" target="_blank" rel="external">ios5.0系统获取mac的Demo</a></li>
<li><p>iOS2.0以上及iOS5.0以下的系统可用,但不建议使用.Apple在ios5.0之后删除该函数.</p>
</li>
<li><p>经过测试,未越狱的iPhone,系统版本为5.0.1,依然可以获取UDID.</p>
</li>
<li><p>但是我们需要注意的一点是,对于已越狱了的设备,UDID并不是唯一的.使用Cydia插件UDIDFaker,可以为每一个应用分配不同的UDID.</p>
</li>
</ul>
<p>所以UDID作为标识唯一设备的用途已经不大了.</p>
<ul>
<li>注意：然而在<strong>iOS 7</strong>中苹果再一次无情的封杀mac地址，使用之前的方法获取到的mac地址全部都变成了02:00:00:00:00:00，等同于<strong>此方法被废除</strong>。</li>
</ul>
<p>同时，苹果公司建议使用UUID【一种开放的软件构建标准】来替代：</p>
<p><strong> 注意:</strong></p>
<ul>
<li>该方法每次都会获取一个唯一的标识字符串，开发者可以在应用第一次启动时候调用一次，然后将该串存储起来，以便以后替代UDID来使用。</li>
<li>问题是如果用户删除该应用再次安装时，又会生成新的字符串，所以不能保证唯一识别该设备。</li>
<li>而最近（2012年3月），有消息称苹果应用商店开始拒绝使用UDID的应用上架。</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">这个方法我测试过，每次登陆都不一样的数据</div><div class="line">-(<span class="built_in">NSString</span>*) uuid &#123;</div><div class="line"></div><div class="line"><span class="built_in">CFUUIDRef</span> puuid = <span class="built_in">CFUUIDCreate</span>( <span class="literal">nil</span> );</div><div class="line"></div><div class="line"><span class="built_in">CFStringRef</span> uuidString = <span class="built_in">CFUUIDCreateString</span>( <span class="literal">nil</span>, puuid );</div><div class="line"></div><div class="line"><span class="built_in">NSString</span> * result = (<span class="built_in">NSString</span> *)<span class="built_in">CFStringCreateCopy</span>( <span class="literal">NULL</span>, uuidString);</div><div class="line"></div><div class="line"><span class="built_in">CFRelease</span>(puuid);</div><div class="line"></div><div class="line"><span class="built_in">CFRelease</span>(uuidString); <span class="keyword">return</span> [result autorelease];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>#5、重点:keychain存储UUID</p>
<h3 id="什么是keychain"><a href="#什么是keychain" class="headerlink" title="什么是keychain"></a><strong>什么是keychain</strong></h3><p>什么是keyChain？<br>请看这个兄弟整理的资料：<a href="http://www.jianshu.com/p/9188235eedab" target="_blank" rel="external">iOS简单使用keychain存储密码</a></p>
<h3 id="使用过程"><a href="#使用过程" class="headerlink" title="使用过程"></a><strong>使用过程</strong></h3><hr>
<h4 id="1-新建一个工程"><a href="#1-新建一个工程" class="headerlink" title="1.新建一个工程"></a>1.新建一个工程</h4><p>看一下自己的Bundle Id.<br>这个Bundle Id 要和你用真机测试时的证书上面的Bundle Id相匹配。<br><img src="http://ww1.sinaimg.cn/mw690/006yX0Ypgw1f9ptflm6qyj30yg0fgtc9.jpg" alt="bundleID：WHD.hundred.webtest"></p>
<hr>
<h4 id="2-Target-Capabilities-Keychain-Sharing-ON"><a href="#2-Target-Capabilities-Keychain-Sharing-ON" class="headerlink" title="2.Target-Capabilities-Keychain Sharing-ON"></a>2.Target-Capabilities-Keychain Sharing-ON</h4><p><img src="http://ww4.sinaimg.cn/mw690/006yX0Ypgw1f9ptfmcn5tj30yg0jwgpc.jpg" alt="未打开Keychain开关"></p>
<p><img src="http://ww1.sinaimg.cn/mw690/006yX0Ypgw1f9ptfnb2mdj30yg0k7wij.jpg" alt="打开Keychain开关以后"></p>
<p>左侧的目录会自动生成Entitlements文件，不需要自己创建了。</p>
<p>也就是说，Bundle Identifier、Keychain Sharing的Keychain Groups、Entitlements文件的Keychain Access Groups的第一个元素，它们要保持上图所示的一致性。</p>
<p>设置好了以后可以运行下程序，没问题可以进行下一步。</p>
<hr>
<h4 id="3-传说中的uuid类和keychain类来啦"><a href="#3-传说中的uuid类和keychain类来啦" class="headerlink" title="3.传说中的uuid类和keychain类来啦"></a>3.传说中的uuid类和keychain类来啦</h4><p>既然苹果的keychain方法会崩溃而且有些复杂，我们只保存一个uuid的话可以用下面的简单方法：<br>UUID.h<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import &lt;Foundation/Foundation.h</span></div><div class="line">@<span class="class"><span class="keyword">interface</span> <span class="title">UUID</span> : <span class="title">NSObject</span></span></div><div class="line">  +(NSString *)getUUID;</div><div class="line">@<span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>UUID.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"UUID.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"KeyChainStore.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"MacPch.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UUID</span></span></div><div class="line"></div><div class="line">+(<span class="built_in">NSString</span> *)getUUID</div><div class="line">&#123;</div><div class="line">    <span class="built_in">NSString</span> * strUUID = (<span class="built_in">NSString</span> *)[KeyChainStore load:<span class="string">@"com.company.app.usernamepassword"</span>];</div><div class="line">    </div><div class="line">    <span class="comment">//首次执行该方法时，uuid为空</span></div><div class="line">    <span class="keyword">if</span> ([strUUID isEqualToString:<span class="string">@""</span>] || !strUUID)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//生成一个uuid的方法</span></div><div class="line">        <span class="built_in">CFUUIDRef</span> uuidRef = <span class="built_in">CFUUIDCreate</span>(kCFAllocatorDefault);</div><div class="line">        </div><div class="line">        strUUID = (<span class="built_in">NSString</span> *)<span class="built_in">CFBridgingRelease</span>(<span class="built_in">CFUUIDCreateString</span>(kCFAllocatorDefault,uuidRef));</div><div class="line">        </div><div class="line">        <span class="comment">//将该uuid保存到keychain</span></div><div class="line">        [KeyChainStore save:KEY_USERNAME_PASSWORD data:strUUID];</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> strUUID;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<p>KeyChainStore.h<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#<span class="keyword">import</span> &lt;Foundation/Foundation.h</div><div class="line"></div><div class="line">@<span class="keyword">interface</span> KeyChainStore : NSObject</div><div class="line"></div><div class="line">+ (void)<span class="keyword">save</span>:(NSString *)service <span class="keyword">data</span>:(id)<span class="keyword">data</span>;</div><div class="line">+ (id)load:(NSString *)service;</div><div class="line">+ (void)deleteKeyData:(NSString *)service;</div><div class="line"></div><div class="line">@<span class="keyword">end</span></div></pre></td></tr></table></figure></p>
<p>KeyChainStore.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"KeyChainStore.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">KeyChainStore</span></span></div><div class="line"></div><div class="line">+ (<span class="built_in">NSMutableDictionary</span> *)getKeychainQuery:(<span class="built_in">NSString</span> *)service</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> [<span class="built_in">NSMutableDictionary</span> dictionaryWithObjectsAndKeys:</div><div class="line">            (<span class="keyword">id</span>)kSecClassGenericPassword,(<span class="keyword">id</span>)kSecClass,</div><div class="line">            service, (<span class="keyword">id</span>)kSecAttrService,</div><div class="line">            service, (<span class="keyword">id</span>)kSecAttrAccount,</div><div class="line">            (<span class="keyword">id</span>)kSecAttrAccessibleAfterFirstUnlock,(<span class="keyword">id</span>)kSecAttrAccessible,</div><div class="line">            <span class="literal">nil</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (<span class="keyword">void</span>)save:(<span class="built_in">NSString</span> *)service data:(<span class="keyword">id</span>)data</div><div class="line">&#123;</div><div class="line">    <span class="comment">//Get search dictionary</span></div><div class="line">    <span class="built_in">NSMutableDictionary</span> *keychainQuery = [<span class="keyword">self</span> getKeychainQuery:service];</div><div class="line">    <span class="comment">//Delete old item before add new item</span></div><div class="line">    SecItemDelete((<span class="built_in">CFDictionaryRef</span>)keychainQuery);</div><div class="line">    <span class="comment">//Add new object to search dictionary(Attention:the data format)</span></div><div class="line">    [keychainQuery setObject:[<span class="built_in">NSKeyedArchiver</span> archivedDataWithRootObject:data] forKey:(<span class="keyword">id</span>)kSecValueData];</div><div class="line">    <span class="comment">//Add item to keychain with the search dictionary</span></div><div class="line">    SecItemAdd((<span class="built_in">CFDictionaryRef</span>)keychainQuery, <span class="literal">NULL</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (<span class="keyword">id</span>)load:(<span class="built_in">NSString</span> *)service</div><div class="line">&#123;</div><div class="line">    <span class="keyword">id</span> ret = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *keychainQuery = [<span class="keyword">self</span> getKeychainQuery:service];</div><div class="line">    <span class="comment">//Configure the search setting</span></div><div class="line">    <span class="comment">//Since in our simple case we are expecting only a single attribute to be returned (the password) we can set the attribute kSecReturnData to kCFBooleanTrue</span></div><div class="line">    [keychainQuery setObject:(<span class="keyword">id</span>)kCFBooleanTrue forKey:(<span class="keyword">id</span>)kSecReturnData];</div><div class="line">    [keychainQuery setObject:(<span class="keyword">id</span>)kSecMatchLimitOne forKey:(<span class="keyword">id</span>)kSecMatchLimit];</div><div class="line">    <span class="built_in">CFDataRef</span> keyData = <span class="literal">NULL</span>;</div><div class="line">    <span class="keyword">if</span> (SecItemCopyMatching((<span class="built_in">CFDictionaryRef</span>)keychainQuery, (<span class="built_in">CFTypeRef</span> *)&amp;keyData) == noErr) &#123;</div><div class="line">        <span class="keyword">@try</span> &#123;</div><div class="line">            ret = [<span class="built_in">NSKeyedUnarchiver</span> unarchiveObjectWithData:(__bridge <span class="built_in">NSData</span> *)keyData];</div><div class="line">        &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *e) &#123;</div><div class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Unarchive of %@ failed: %@"</span>, service, e);</div><div class="line">        &#125; <span class="keyword">@finally</span> &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (keyData)</div><div class="line">        <span class="built_in">CFRelease</span>(keyData);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (<span class="keyword">void</span>)deleteKeyData:(<span class="built_in">NSString</span> *)service &#123;</div><div class="line">    <span class="built_in">NSMutableDictionary</span> *keychainQuery = [<span class="keyword">self</span> getKeychainQuery:service];</div><div class="line">    SecItemDelete((<span class="built_in">CFDictionaryRef</span>)keychainQuery);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure></p>
<p>将这两个类添加到工程中(如图)</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-68e803b3f714bd5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="如图"></p>
<hr>
<h4 id="4-新建一个pch文件，然后pch文件的内容如下："><a href="#4-新建一个pch文件，然后pch文件的内容如下：" class="headerlink" title="4.新建一个pch文件，然后pch文件的内容如下："></a>4.新建一个pch文件，然后pch文件的内容如下：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> PrefixHeader_pch</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PrefixHeader_pch</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_USERNAME_PASSWORD @<span class="meta-string">"com.company.app.usernamepassword"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_USERNAME @<span class="meta-string">"com.company.app.username"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_PASSWORD @<span class="meta-string">"com.company.app.password"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure>
<p>pch文件的创建方法可参考：<a href="http://blog.csdn.net/huang2009303513/article/details/40375235" target="_blank" rel="external">学习制作pch的连接</a><br>你有可能会在填Prefix Header 即pch文件的路径那里报错，最近又学习到一种更好的方式<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$(</span>SRCROOT)/<span class="variable">$(</span>PROJECT_NAME)/PrefixHeader.pch</div></pre></td></tr></table></figure></p>
<p>其中$(PROJECT_NAME)是相对工程名,比上面的方法更便捷.</p>
<hr>
<h4 id="5-在viewcontroller-m里面执行如下代码"><a href="#5-在viewcontroller-m里面执行如下代码" class="headerlink" title="5.在viewcontroller.m里面执行如下代码"></a>5.在viewcontroller.m里面执行如下代码</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSString * uuid= [UUID getUUID]<span class="comment">;</span></div><div class="line">NSLog(@<span class="string">"uuid=%@"</span>,uuid)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>结果如下 ：<br><strong>MAC:EB7F7DD2-9845-4A73-B592-FBE9DD38418E</strong></p>
<p>##6、第三方框架-SFHFKeychainUtils<br><em>存储基于（keychain存储UUID封装）-6年前的库了，仅供参考</em></p>
<p> SFHFKeychainUtils （<a href="https://github.com/ldandersen/scifihifi-iphone" target="_blank" rel="external">点击下载</a>）是一个封装了KeyChain简单操作的第三方类库</p>
<ul>
<li>1、引入Security.frameWork框架。</li>
<li>2、引入头文件：SFHKeychainUtils.h.（注意：SFHKeychainUtils为MRC，在ARC环境需配置如下）</li>
</ul>
<p><img src="http://ww2.sinaimg.cn/mw690/006yX0Ypgw1f9ptfnrtzsj30h903xdg5.jpg" alt="SFHKeychainUtils.h"></p>
<ul>
<li>3、方法如下</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#pragma mark -获取唯一UUID</span></div><div class="line"></div><div class="line">- (<span class="built_in">NSString</span>*)UUID &#123;</div><div class="line">    </div><div class="line">         <span class="built_in">NSDictionary</span> *infoDict = [[<span class="built_in">NSBundle</span> mainBundle] infoDictionary];</div><div class="line">    </div><div class="line">         <span class="built_in">NSString</span> *userName = infoDict[<span class="string">@"CFBundleName"</span>];</div><div class="line">    </div><div class="line">         <span class="built_in">NSString</span> *serviceName = infoDict[<span class="string">@"CFBundleIdentifier"</span>];</div><div class="line">    </div><div class="line">         <span class="built_in">NSString</span> *UUID = [SFHFKeychainUtils getPasswordForUsername:userName andServiceName:serviceName error:<span class="literal">nil</span>];</div><div class="line">    </div><div class="line">         <span class="keyword">if</span> (UUID.length==<span class="number">0</span>) &#123;</div><div class="line">        </div><div class="line">                  UUID = [[[<span class="built_in">UIDevice</span> currentDevice] identifierForVendor] UUIDString];</div><div class="line">        </div><div class="line">                  [SFHFKeychainUtils storeUsername:userName andPassword:UUID forServiceName:serviceName updateExisting:<span class="number">1</span> error:<span class="literal">nil</span>];</div><div class="line">        </div><div class="line">              &#125;</div><div class="line">    <span class="keyword">return</span> UUID;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="本次演示个人用的demo（第二个的方法就是用的上面提到的第5个方法）"><a href="#本次演示个人用的demo（第二个的方法就是用的上面提到的第5个方法）" class="headerlink" title="本次演示个人用的demo（第二个的方法就是用的上面提到的第5个方法）:"></a>本次演示个人用的demo（第二个的方法就是用的上面提到的第5个方法）:</h3><h3 id="GithubDemo用的工程文件-导入调用即可"><a href="#GithubDemo用的工程文件-导入调用即可" class="headerlink" title="GithubDemo用的工程文件,导入调用即可"></a><a href="https://github.com/OneHundredSir/Package/tree/master/%E5%B7%A5%E5%85%B7%E7%AE%B1/%E5%B8%B8%E7%94%A8%E5%B0%81%E8%A3%85%E5%8C%85/%E5%B7%A5%E5%85%B7%E7%B1%BB(%E5%88%86%E7%B1%BB" target="_blank" rel="external">GithubDemo用的工程文件,导入调用即可</a></h3><p><img src="http://ww3.sinaimg.cn/mw690/006yX0Ypgw1f9ptdgo2zsg30ys0grat8.gif" alt="demo演示"></p>
<hr>
<h2 id="赠人点赞，手留余香"><a href="#赠人点赞，手留余香" class="headerlink" title="赠人点赞，手留余香~~~~"></a>赠人点赞，手留余香~~~~</h2><p><img src="http://ww3.sinaimg.cn/small/006yX0Ypgw1f9ptczym9zg30v008d74x.gif" alt="点赞图片"></p>
<p>作者信息</p>
<p>如果有不足或者错误的地方还望各位读者批评指正，可以评论留言，笔者收到后第一时间回复。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">具体信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">QQ/微信</td>
<td style="text-align:center">hundreda</td>
</tr>
<tr>
<td style="text-align:center">简书号连接</td>
<td style="text-align:center"><a href="http://www.jianshu.com/users/a3ae6d7c68b6/latest_articles" target="_blank" rel="external">iOS-香蕉大大</a></td>
</tr>
<tr>
<td style="text-align:center">GitHub个人开源主页</td>
<td style="text-align:center"><a href="https://github.com/OneHundredSir" target="_blank" rel="external">GitHub连接</a></td>
</tr>
<tr>
<td style="text-align:center">好心人赏我个<code>赞</code></td>
<td style="text-align:center"><code>欢迎各位前来查看，star,感谢各位的阅读</code></td>
</tr>
<tr>
<td style="text-align:center">个人iOS开发QQ讨论群</td>
<td style="text-align:center"><strong>365204530</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>群内规矩</code></td>
<td style="text-align:center"><code>聊天扯淡，讨论技术都行，没有什么群规，不懂就问</code></td>
</tr>
<tr>
<td style="text-align:center">iOS开发类微信订阅号</td>
<td style="text-align:center"><strong>大大家的IOS说</strong></td>
</tr>
<tr>
<td style="text-align:center"><em>微信扫一扫下面二维码</em></td>
<td style="text-align:center"><code>一起用碎片时间学习IOS吧</code></td>
</tr>
</tbody>
</table>
<p><img src="http://ww2.sinaimg.cn/mw1024/006yX0Ypgw1f79vf9y3b9g30ib0ae4j8.gif" alt="微信个人技术订阅号"><br>喜欢的朋友可以赏我2块大洋买糖吃～你的打赏是我前进的动力~一起做一个乐于分享的人吧~</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS进阶/">iOS进阶</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS黑魔法/">iOS黑魔法</a><a href="/tags/runtime/">runtime</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>






   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/iosOC项目仿写/[大大OC项目仿写]-花田小憩APP仿写/" title="OC-花田小憩APP仿写" itemprop="url">OC-花田小憩APP仿写</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <blockquote>
<p>左边动画网络数据加载</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-01d6f5d9de9af741.gif?imageMogr2/auto-orient/strip" alt="左边动画网络数据加载"></p>
<blockquote>
<p>中间按钮</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-56309fa87fb51d29.gif?imageMogr2/auto-orient/strip" alt="中间按钮.gif"></p>
<blockquote>
<p>前10的scrollView和tableView</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-9de1e3e91181bbac.gif?imageMogr2/auto-orient/strip" alt="前10的scrollView和tableView.gif"></p>
<blockquote>
<p>作者页面的collection</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-81a97446635f62ad.gif?imageMogr2/auto-orient/strip" alt="作者页面的collection.gif"></p>
<blockquote>
<p>商城部分广告页面和tableview展示</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-16fcda55abbbdabb.gif?imageMogr2/auto-orient/strip" alt="商城部分广告页面和tableview展示.gif"></p>
<blockquote>
<p>商城左边的功能</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-de3f68ce8fc2c463.gif?imageMogr2/auto-orient/strip" alt="商城左边的功能.gif"></p>
<blockquote>
<p>我的功能</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-a4d3e54a8233d659.gif?imageMogr2/auto-orient/strip" alt="我的功能"></p>
<blockquote>
<p>登陆</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-85f7b6b54ba9f69d.gif?imageMogr2/auto-orient/strip" alt="登陆"></p>
<p>Demo地址: <strong><a href="https://github.com/OneHundredSir/OC_ProjectLists/tree/master/%E8%8A%B1%E7%94%B0%E5%B0%8F%E6%86%A9" target="_blank" rel="external">花田小憩的  Demo</a></strong></p>
<p>APP下载地址:<a href="http://fir.im/htsj" target="_blank" rel="external">下载地址</a><br>项目仿写请勿用于商业～仅供学习交流，如有侵犯公司商业权益请联系我的微信:hundreda，我将及时处理相关信息</p>
<p>喜欢的朋友可以赏我2块大洋买糖吃～和我一样屌丝的朋友希望能给我点个赞～需要我录制视频的请直接给我糖。一起做一个乐于分享的人吧</p>
<p>##赠人点赞，手留余香~~~~</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-1e47fa324e85fb46.gif?imageMogr2/auto-orient/strip" alt="点赞图片"></p>
<blockquote>
<p>作者信息</p>
</blockquote>
<p>如果有不足或者错误的地方还望各位读者批评指正，可以评论留言，笔者收到后第一时间回复。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">具体信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">QQ/微信</td>
<td style="text-align:center">hundreda</td>
</tr>
<tr>
<td style="text-align:center">简书号连接</td>
<td style="text-align:center"><a href="http://www.jianshu.com/users/a3ae6d7c68b6/latest_articles" target="_blank" rel="external">iOS-香蕉大大</a></td>
</tr>
<tr>
<td style="text-align:center">GitHub个人开源主页</td>
<td style="text-align:center"><a href="https://github.com/OneHundredSir" target="_blank" rel="external">GitHub连接</a></td>
</tr>
<tr>
<td style="text-align:center">好心人赏我个<code>赞</code></td>
<td style="text-align:center"><code>欢迎各位前来查看，star,感谢各位的阅读</code></td>
</tr>
<tr>
<td style="text-align:center">个人iOS开发QQ讨论群</td>
<td style="text-align:center"><strong>365204530</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>群内规矩</code></td>
<td style="text-align:center"><code>聊天扯淡，讨论技术都行，没有什么群规，不懂就问</code></td>
</tr>
<tr>
<td style="text-align:center">iOS开发类微信订阅号</td>
<td style="text-align:center"><strong>大大家的IOS说</strong></td>
</tr>
<tr>
<td style="text-align:center"><em>微信扫一扫下面二维码</em></td>
<td style="text-align:center"><code>一起用碎片时间学习IOS吧</code></td>
</tr>
</tbody>
</table>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-755d908f00d77cf8.gif?imageMogr2/auto-orient/strip" alt="微信个人技术订阅号"><br>喜欢的朋友可以赏我2块大洋买糖吃～你的打赏是我前进的动力~一起做一个乐于分享的人吧~</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS入门/">iOS入门</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS项目/">iOS项目</a><a href="/tags/iOS开发/">iOS开发</a><a href="/tags/项目仿写/">项目仿写</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>






   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/iosOC项目仿写/[大大OC项目仿写]-小日子APP仿写/" title="OC仿写-小日子APP仿写" itemprop="url">OC仿写-小日子APP仿写</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <h1 id="小日子objective-C"><a href="#小日子objective-C" class="headerlink" title="小日子objective-C"></a>小日子objective-C</h1><hr>
<blockquote>
<p>##这里用到的库</p>
</blockquote>
<p>####1、MBProgressHUD (弹窗)</p>
<p>####2、MJExtension（字典转模型）</p>
<p>####3、MJRefresh（上下拉刷新）</p>
<p>####4、SDWebImage（网络图片下载）</p>
<blockquote>
<p>##库的使用</p>
</blockquote>
<ul>
<li>注意这下面只是这里用，这里只是介绍了这里用到的，具体学习请参考每个第三方的demo的使用</li>
</ul>
<h4 id="1、MBProgressHUD-弹窗"><a href="#1、MBProgressHUD-弹窗" class="headerlink" title="1、MBProgressHUD (弹窗)"></a>1、MBProgressHUD (弹窗)</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> *  布置提示框</div><div class="line"> */</div><div class="line">-(<span class="keyword">void</span>)setUpHub:(<span class="built_in">NSString</span> *)show</div><div class="line">&#123;</div><div class="line">    <span class="comment">//初始化进度框，置于当前的View当中</span></div><div class="line">    _Hub = [[MBProgressHUD alloc] initWithView:<span class="keyword">self</span>.view];</div><div class="line">    [<span class="keyword">self</span>.view addSubview:_Hub];</div><div class="line">    <span class="comment">//如果设置此属性则当前的view置于后台</span></div><div class="line">    _Hub.dimBackground = <span class="literal">YES</span>;</div><div class="line">    </div><div class="line">    _Hub.mode=MBProgressHUDModeDeterminate;</div><div class="line">    </div><div class="line">    <span class="comment">//设置对话框文字</span></div><div class="line">    _Hub.labelText = show;</div><div class="line"></div><div class="line">    </div><div class="line">    <span class="comment">//显示对话框</span></div><div class="line">    [_Hub showAnimated:<span class="literal">YES</span> whileExecutingBlock:^&#123;</div><div class="line">        <span class="comment">//对话框显示时需要执行的操作</span></div><div class="line">        sleep(<span class="number">1</span>);</div><div class="line">    &#125; completionBlock:^&#123;</div><div class="line">        <span class="comment">//操作执行完后取消对话框</span></div><div class="line">        [_Hub removeFromSuperview];</div><div class="line">        _Hub = <span class="literal">nil</span>;</div><div class="line">    &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2、MJExtension（字典转模型）"><a href="#2、MJExtension（字典转模型）" class="headerlink" title="2、MJExtension（字典转模型）"></a>2、MJExtension（字典转模型）</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - lazy load</span></div><div class="line">-(<span class="built_in">NSMutableArray</span> *)firModel_list</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (_firModel_list) &#123;</div><div class="line">        <span class="keyword">return</span> _firModel_list;</div><div class="line">    &#125;</div><div class="line">    _firModel_list=[@[] mutableCopy];</div><div class="line">    <span class="built_in">NSString</span> *path=[[<span class="built_in">NSBundle</span> mainBundle]pathForResource:<span class="string">@"events"</span> ofType:<span class="literal">nil</span>];</div><div class="line">    <span class="comment">//把JSON数据转换成字典</span></div><div class="line">    <span class="built_in">NSData</span> *data=[<span class="built_in">NSData</span> dataWithContentsOfFile:path];</div><div class="line">    <span class="built_in">NSDictionary</span> *dic=[<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:data options:<span class="built_in">NSJSONReadingMutableContainers</span> error:<span class="literal">nil</span>];</div><div class="line">    <span class="comment">//获取字典中的数组,-------&gt;这里就是用到了第三方的转模型</span></div><div class="line">    <span class="comment">//WHDFirModel这只是自定义的字典模型</span></div><div class="line">    <span class="built_in">NSArray</span> *getArr=dic[<span class="string">@"list"</span>];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">NSDictionary</span> *realDic <span class="keyword">in</span> getArr) &#123;</div><div class="line">        WHDFirModel *model=[WHDFirModel mj_objectWithKeyValues:realDic];</div><div class="line">        [_firModel_list addObject:model];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> _firModel_list;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3、MJRefresh（上下拉刷新）"><a href="#3、MJRefresh（上下拉刷新）" class="headerlink" title="3、MJRefresh（上下拉刷新）"></a>3、MJRefresh（上下拉刷新）</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"> _table.mj_header=[MJRefreshNormalHeader <span class="string">headerWithRefreshingBlock:</span>^&#123;</div><div class="line"> [NSTimer <span class="string">scheduledTimerWithTimeInterval:</span><span class="number">2</span> <span class="string">target:</span>self  <span class="string">selector:</span><span class="meta">@selector</span>(stopme) <span class="string">userInfo:</span>nil <span class="string">repeats:</span>NO];</div><div class="line"> &#125;];</div><div class="line"></div><div class="line"> _table.mj_footer=[MJRefreshAutoFooter <span class="string">footerWithRefreshingBlock:</span>^&#123;</div><div class="line"> [NSTimer <span class="string">scheduledTimerWithTimeInterval:</span><span class="number">2</span> <span class="string">target:</span>self <span class="string">selector:</span><span class="meta">@selector</span>(stopme) <span class="string">userInfo:</span>nil <span class="string">repeats:</span>NO];</div><div class="line"> &#125;];</div><div class="line"> _table.mj_footer = [MJRefreshAutoNormalFooter <span class="string">footerWithRefreshingBlock:</span>^&#123;</div><div class="line"> &#125;];</div><div class="line"> </div><div class="line"></div><div class="line">结束刷新有几种方法</div><div class="line"><span class="keyword">if</span> (data) &#123;</div><div class="line">     [_table.mj_header endRefreshing];</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">[_table.mj_footer endRefreshingWithNoMoreData];</div><div class="line">&#125;</div><div class="line"> [_table.mj_header endRefreshing];</div></pre></td></tr></table></figure>
<h4 id="4、SDWebImage（网络图片下载）"><a href="#4、SDWebImage（网络图片下载）" class="headerlink" title="4、SDWebImage（网络图片下载）"></a>4、SDWebImage（网络图片下载）</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">----导入：UIImageView+WebCache----</div><div class="line">[firCell.backImage <span class="string">sd_setImageWithURL:</span>[NSURL <span class="string">URLWithString:</span>imageUrl] <span class="string">placeholderImage:</span>[UIImage <span class="string">imageNamed:</span>@<span class="string">"mebackground"</span>]];</div></pre></td></tr></table></figure>
<blockquote>
<p>##简单的库实现，如果喜欢的朋友麻烦帮忙点个赞哈～入门的朋友可以练练手</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-b3eb59de05891cce.gif?imageMogr2/auto-orient/strip" alt="展示图片"></p>
<p><a href="https://github.com/OneHundredSir/OC_smallDay" target="_blank" rel="external">github地址</a>:<a href="https://github.com/OneHundredSir/OC_smallDay" target="_blank" rel="external">https://github.com/OneHundredSir/OC_smallDay</a></p>
<h1 id="多说无益，功能介绍，附上gif动态图展示"><a href="#多说无益，功能介绍，附上gif动态图展示" class="headerlink" title="多说无益，功能介绍，附上gif动态图展示"></a>多说无益，功能介绍，附上gif动态图展示</h1><blockquote>
<p>左上角选择地图</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-6c446ba0acdac61a.gif?imageMogr2/auto-orient/strip" alt="左上角选择地图.gif"></p>
<blockquote>
<p>顶部scrollView与tableView</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-c94b36c0ccc3ccde.gif?imageMogr2/auto-orient/strip" alt="顶部scrollView与tableView.gif"></p>
<blockquote>
<p>广告页面</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-129cab8c43597a9c.gif?imageMogr2/auto-orient/strip" alt="广告页面.gif"></p>
<blockquote>
<p>collectionView</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-cafaf48b6ccef44f.gif?imageMogr2/auto-orient/strip" alt="collectionView.gif"></p>
<blockquote>
<p>search功能</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-9e08f09217175f75.gif?imageMogr2/auto-orient/strip" alt="search.gif"></p>
<blockquote>
<p>我的页面功能</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-f4126be6dc2e2cb8.gif?imageMogr2/auto-orient/strip" alt="我的.gif"></p>
<p>这个是demo<br>这个案例中用到的第三方框架自己参考参考,不是一定要用也可以自己封装<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">pod</span> <span class="string">'MJRefresh'</span>, <span class="string">'~&gt; 3.1.9'</span></div><div class="line">pod <span class="string">'SDWebImage'</span></div><div class="line">pod <span class="string">'XMPPFramework'</span></div><div class="line">pod <span class="string">'FMDB'</span></div><div class="line">pod <span class="string">'MBProgressHUD'</span></div><div class="line">pod <span class="string">'IQKeyboardManager'</span></div><div class="line">pod <span class="string">'MJExtension'</span>, <span class="string">'~&gt; 3.0.11'</span></div></pre></td></tr></table></figure></p>
<p>Demo地址:<a href="https://github.com/OneHundredSir/OC_ProjectLists/tree/master/%E5%B0%8F%E6%97%A5%E5%AD%90" target="_blank" rel="external">小日子  Demo</a></p>
<h2 id="赠人点赞，手留余香"><a href="#赠人点赞，手留余香" class="headerlink" title="赠人点赞，手留余香~~~~"></a>赠人点赞，手留余香~~~~</h2><p><img src="http://upload-images.jianshu.io/upload_images/1730495-1e47fa324e85fb46.gif?imageMogr2/auto-orient/strip" alt="点赞图片"></p>
<blockquote>
<p>作者信息</p>
</blockquote>
<p>如果有不足或者错误的地方还望各位读者批评指正，可以评论留言，笔者收到后第一时间回复。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">具体信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">QQ/微信</td>
<td style="text-align:center">hundreda</td>
</tr>
<tr>
<td style="text-align:center">简书号连接</td>
<td style="text-align:center"><a href="http://www.jianshu.com/users/a3ae6d7c68b6/latest_articles" target="_blank" rel="external">iOS-香蕉大大</a></td>
</tr>
<tr>
<td style="text-align:center">GitHub个人开源主页</td>
<td style="text-align:center"><a href="https://github.com/OneHundredSir" target="_blank" rel="external">GitHub连接</a></td>
</tr>
<tr>
<td style="text-align:center">好心人赏我个<code>赞</code></td>
<td style="text-align:center"><code>欢迎各位前来查看，star,感谢各位的阅读</code></td>
</tr>
<tr>
<td style="text-align:center">个人iOS开发QQ讨论群</td>
<td style="text-align:center"><strong>365204530</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>群内规矩</code></td>
<td style="text-align:center"><code>聊天扯淡，讨论技术都行，没有什么群规，不懂就问</code></td>
</tr>
<tr>
<td style="text-align:center">iOS开发类微信订阅号</td>
<td style="text-align:center"><strong>大大家的IOS说</strong></td>
</tr>
<tr>
<td style="text-align:center"><em>微信扫一扫下面二维码</em></td>
<td style="text-align:center"><code>一起用碎片时间学习IOS吧</code></td>
</tr>
</tbody>
</table>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-755d908f00d77cf8.gif?imageMogr2/auto-orient/strip" alt="微信个人技术订阅号"><br>喜欢的朋友可以赏我2块大洋买糖吃～你的打赏是我前进的动力~一起做一个乐于分享的人吧~</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS入门/">iOS入门</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS项目/">iOS项目</a><a href="/tags/iOS开发/">iOS开发</a><a href="/tags/项目仿写/">项目仿写</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>






   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/iosOC项目仿写/[IOS项目扩展阅读]---重复的就不多说了/" title="IOS项目扩展阅读" itemprop="url">IOS项目扩展阅读</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <p>有什么好的希望能和我说下,我不间断更新</p>
<blockquote>
<p>个人觉得不错的博客或者别的数据</p>
</blockquote>
<ul>
<li><a href="https://github.com/shu223?tab=repositories" target="_blank" rel="external">iOS 各个版本特性demo(推荐)</a></li>
</ul>
<p>设计工具 sketch<br>sketch 应该算是现在非常流行的移动设计关键了 具体百度Google咯 我只想说你看官网主页下面使用的公司就知道 学习吧不会错<br>官网 <a href="http://www.sketchapp.com" target="_blank" rel="external">http://www.sketchapp.com</a><br>中文学习网址 <a href="http://www.sketchcn.com" target="_blank" rel="external">http://www.sketchcn.com</a><br>在官网的头部 Community 选项里面可以看到很多可以和sketch配合的设计工具 这里主要推荐下这货 动画设计工具 好吧 换行</p>
<p>动画原形交互设计工具<br>这货也是看看官网你就懂了 多牛逼了 不会动画的设计师怎么可以称得上好的设计师呢<br>官网 <a href="http://framerjs.com" target="_blank" rel="external">http://framerjs.com</a><br>中文版的网站没有找自己动手吧 我只是推荐的</p>
<p>Android &amp;&amp; iOS 设计规范<br>每个平台都有自己的独特性 一流的公司的App都会遵从平台的开发规范,发挥各个平台的特点 咕~~(╯﹏╰)b 我们是小公司所有Android iOS 一个吊样 哈哈<br>反正我感觉移动设计规范这种东西还是蛮重要的 会让你的App更人性话 更符合平台气质</p>
<p>Apple设计规范<br>官网  <a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556-CH66-SW1" target="_blank" rel="external">https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556-CH66-SW1</a></p>
<p>国内腾讯设计团队的良心翻译 <a href="http://isux.tencent.com/ios9-guideline-ch1.html" target="_blank" rel="external">http://isux.tencent.com/ios9-guideline-ch1.html</a> (以前推荐过了 )<br>Android 设计规范</p>
<p>官网  <a href="http://developer.android.com/intl/zh-cn/design/index.html" target="_blank" rel="external">http://developer.android.com/intl/zh-cn/design/index.html</a>  (反正我开着梯子还是失联状态 自己找咯)</p>
<p>也是国内团队的翻译    <a href="http://www.apkbus.com/design/get-started/principles.html" target="_blank" rel="external">http://www.apkbus.com/design/get-started/principles.html</a><br>最后HTML5<br>这是个必火的平台 但是让这货学习他说不想写网页 我就放弃了 这里还是推荐下中文的入门网址</p>
<p><a href="http://www.w3school.com.cn/html5/index.asp" target="_blank" rel="external">http://www.w3school.com.cn/html5/index.asp</a> 反正这个网站各种入门教程都有</p>
<p>推荐UI网站<br><a href="https://dribbble.com/search?q=ios" target="_blank" rel="external">https://dribbble.com/search?q=ios</a></p>
<p><a href="http://www.mobile-patterns.com" target="_blank" rel="external">http://www.mobile-patterns.com</a></p>
<p><a href="http://ui4app.com" target="_blank" rel="external">http://ui4app.com</a></p>
<p><a href="http://www.iconfont.cn/repositories/10" target="_blank" rel="external">http://www.iconfont.cn/repositories/10</a> (这个良心推荐上面都是图标 用了你会发现其实平庸的设计师没什么卵用了 )</p>
<p>一键生成AppIcon 多有尺寸图标<br>果然: <a href="http://ydimage.yidianhulian.com/" target="_blank" rel="external">http://ydimage.yidianhulian.com/</a> 可以生成各个平台的Icon图标亲测可用 瞬间感觉吊屌的 哈哈</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS入门/">iOS入门</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS工具/">iOS工具</a><a href="/tags/iOS拓展资料/">iOS拓展资料</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>






   
    
    <article class="post-expand post" itemprop="articleBody"> 
        <header class="article-info clearfix">
  <h1 itemprop="name">
    
      <a href="/2015/10/20/iosOC项目仿写/[大大OC项目仿写]-过足瘾APP仿写/" title="OC仿写-过足瘾APP仿写" itemprop="url">OC仿写-过足瘾APP仿写</a>
  </h1>
  <p class="article-author">By
       
		<a href="/about" title="Hundred Wang" target="_blank" itemprop="author">Hundred Wang</a>
		
  <p class="article-time">
    <time datetime="2015-10-19T22:49:50.000Z" itemprop="datePublished"> 发表于 2015-10-20</time>
    
  </p>
</header>
    <div class="article-content">
        
        <h1 id="多说无益，功能介绍，附上gif动态图展示"><a href="#多说无益，功能介绍，附上gif动态图展示" class="headerlink" title="多说无益，功能介绍，附上gif动态图展示"></a>多说无益，功能介绍，附上gif动态图展示</h1><p>Demo地址：<strong><a href="https://github.com/OneHundredSir/FootLove-OC" target="_blank" rel="external">FootLove-OCDemo</a></strong></p>
<blockquote>
<p>开机引导页</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-503ba6bb609f5fbc.gif?imageMogr2/auto-orient/strip" alt="开机引导页.gif"></p>
<blockquote>
<p>左边侧滑窗</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-fdb433c53b233bfe.gif?imageMogr2/auto-orient/strip" alt="左边侧滑框抽屉效果.gif"></p>
<blockquote>
<p>顶部按钮切换设计</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-c8fc3877416df388.gif?imageMogr2/auto-orient/strip" alt="顶部按钮切换.gif"></p>
<blockquote>
<p>定时广告栏，自己封装</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-c3c4b3cac6408baf.gif?imageMogr2/auto-orient/strip" alt="定时广告栏"></p>
<blockquote>
<p>uiview的自定布局</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-2f3dbc8f3e5961bb.gif?imageMogr2/auto-orient/strip" alt="自动动态布局.gif"></p>
<blockquote>
<p>XMPP实现信息传输 （需要用到ejabberd-16.03以及Adium）</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-d9ed54d488b7b0f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="XMPP工具"></p>
<p>这个是demo<br>这个案例中用到的第三方框架自己参考参考<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">pod</span> <span class="string">'MJRefresh'</span>, <span class="string">'~&gt; 3.1.9'</span></div><div class="line">pod <span class="string">'SDWebImage'</span></div><div class="line">pod <span class="string">'XMPPFramework'</span></div><div class="line">pod <span class="string">'FMDB'</span></div><div class="line">pod <span class="string">'MBProgressHUD'</span></div><div class="line">pod <span class="string">'IQKeyboardManager'</span></div><div class="line">pod <span class="string">'MJExtension'</span>, <span class="string">'~&gt; 3.0.11'</span></div></pre></td></tr></table></figure></p>
<p>Demo地址：<strong><a href="https://github.com/OneHundredSir/OC_ProjectLists/tree/master/%E8%BF%87%E8%B6%B3%E7%98%BE" target="_blank" rel="external">FootLove-OC  Demo</a></strong></p>
<p>项目仿写请勿用于商业～仅供学习交流，如有侵犯公司商业权益请联系我的微信:hundreda，我将及时处理相关信息</p>
<p>喜欢的朋友可以赏我2块大洋买糖吃～和我一样屌丝的朋友希望能给我点个赞～需要我录制视频的请直接给我糖。一起做一个乐于分享的人吧.</p>
<h2 id="赠人点赞，手留余香"><a href="#赠人点赞，手留余香" class="headerlink" title="赠人点赞，手留余香~~~~"></a>赠人点赞，手留余香~~~~</h2><p><img src="http://upload-images.jianshu.io/upload_images/1730495-1e47fa324e85fb46.gif?imageMogr2/auto-orient/strip" alt="点赞图片"></p>
<blockquote>
<p>作者信息</p>
</blockquote>
<p>如果有不足或者错误的地方还望各位读者批评指正，可以评论留言，笔者收到后第一时间回复。</p>
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">具体信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">QQ/微信</td>
<td style="text-align:center">hundreda</td>
</tr>
<tr>
<td style="text-align:center">简书号连接</td>
<td style="text-align:center"><a href="http://www.jianshu.com/users/a3ae6d7c68b6/latest_articles" target="_blank" rel="external">iOS-香蕉大大</a></td>
</tr>
<tr>
<td style="text-align:center">GitHub个人开源主页</td>
<td style="text-align:center"><a href="https://github.com/OneHundredSir" target="_blank" rel="external">GitHub连接</a></td>
</tr>
<tr>
<td style="text-align:center">好心人赏我个<code>赞</code></td>
<td style="text-align:center"><code>欢迎各位前来查看，star,感谢各位的阅读</code></td>
</tr>
<tr>
<td style="text-align:center">个人iOS开发QQ讨论群</td>
<td style="text-align:center"><strong>365204530</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>群内规矩</code></td>
<td style="text-align:center"><code>聊天扯淡，讨论技术都行，没有什么群规，不懂就问</code></td>
</tr>
<tr>
<td style="text-align:center">iOS开发类微信订阅号</td>
<td style="text-align:center"><strong>大大家的IOS说</strong></td>
</tr>
<tr>
<td style="text-align:center"><em>微信扫一扫下面二维码</em></td>
<td style="text-align:center"><code>一起用碎片时间学习IOS吧</code></td>
</tr>
</tbody>
</table>
<p><img src="http://upload-images.jianshu.io/upload_images/1730495-755d908f00d77cf8.gif?imageMogr2/auto-orient/strip" alt="微信个人技术订阅号"><br>喜欢的朋友可以赏我2块大洋买糖吃～你的打赏是我前进的动力~一起做一个乐于分享的人吧~</p>

        
        
        <p class="article-more-link">
          
       </p>
    </div>
    <footer class="article-footer clearfix">
<div class="article-catetags">

<div class="article-categories">
  <span></span>
  <a class="article-category-link" href="/categories/iOS入门/">iOS入门</a>
</div>


  <div class="article-tags">
  
  <span></span> <a href="/tags/iOS项目/">iOS项目</a><a href="/tags/iOS开发/">iOS开发</a><a href="/tags/项目仿写/">项目仿写</a>
  </div>

</div>




<div class="comments-count">
	
</div>

</footer>


    </article>







  <nav id="page-nav" class="clearfix">
    <a class="extend prev" rel="prev" href="/"><span></span>Prev</a><a class="page-number" href="/">1</a><span class="page-number current">2</span>
  </nav>

</div>
      <div class="openaside"><a class="navbutton" href="#" title="显示侧边栏"></a></div>

<div id="asidepart">
<div class="closeaside"><a class="closebutton" href="#" title="隐藏侧边栏"></a></div>
<aside class="clearfix">

  
<div class="github-card">
<p class="asidetitle">Github 名片</p>
<div class="github-card" data-github="https://github.com/OneHundredSir" data-width="220" data-height="119" data-theme="medium">
<script type="text/javascript" src="//cdn.jsdelivr.net/github-cards/latest/widget.js" ></script>
</div>
  </div>



  
<div class="categorieslist">
	<p class="asidetitle">分类</p>
		<ul>
		
		  
			<li><a href="/categories/iOS入门/" title="iOS入门">iOS入门<sup>5</sup></a></li>
		  
		
		  
			<li><a href="/categories/iOS进阶/" title="iOS进阶">iOS进阶<sup>11</sup></a></li>
		  
		
		  
		
		  
		
		</ul>
</div>


  
<div class="tagslist">
	<p class="asidetitle">标签</p>
		<ul class="clearfix">
		
			
				<li><a href="/tags/iOS黑魔法/" title="iOS黑魔法">iOS黑魔法<sup>11</sup></a></li>
			
		
			
				<li><a href="/tags/iOS项目/" title="iOS项目">iOS项目<sup>3</sup></a></li>
			
		
			
				<li><a href="/tags/iOS进阶拓展/" title="iOS进阶拓展">iOS进阶拓展<sup>3</sup></a></li>
			
		
			
				<li><a href="/tags/blockKit/" title="blockKit">blockKit<sup>3</sup></a></li>
			
		
			
				<li><a href="/tags/项目仿写/" title="项目仿写">项目仿写<sup>3</sup></a></li>
			
		
			
				<li><a href="/tags/iOS开发/" title="iOS开发">iOS开发<sup>3</sup></a></li>
			
		
			
				<li><a href="/tags/iOS热更新/" title="iOS热更新">iOS热更新<sup>2</sup></a></li>
			
		
			
				<li><a href="/tags/runtime/" title="runtime">runtime<sup>2</sup></a></li>
			
		
			
				<li><a href="/tags/iOS工具/" title="iOS工具">iOS工具<sup>1</sup></a></li>
			
		
			
				<li><a href="/tags/iOS造轮子/" title="iOS造轮子">iOS造轮子<sup>1</sup></a></li>
			
		
			
				<li><a href="/tags/工具/" title="工具">工具<sup>1</sup></a></li>
			
		
			
				<li><a href="/tags/iOS拓展资料/" title="iOS拓展资料">iOS拓展资料<sup>1</sup></a></li>
			
		
		</ul>
</div>


  <div class="linkslist">
  <p class="asidetitle">友情链接</p>
    <ul>
        
          <li>
            
            	<a href="https://coderq.com" target="_blank" title="一个面向程序员交流分享的新一代社区">码农圈</a>
            
          </li>
        
    </ul>
</div>

  


  <div class="rsspart">
	<a href="/atom.xml" target="_blank" title="rss">RSS 订阅</a>
</div>

  <div class="weiboshow">
  <p class="asidetitle">新浪微博</p>
    <iframe width="100%" height="119" class="share_self"  frameborder="0" scrolling="no" src="http://widget.weibo.com/weiboshow/index.php?language=&width=0&height=119&fansRow=2&ptype=1&speed=0&skin=9&isTitle=1&noborder=1&isWeibo=0&isFans=0&uid=null&verifier=b3593ceb&dpc=1"></iframe>
</div>


</aside>
</div>
    </div>
    <footer><div id="footer" >
	
	<div class="line">
		<span></span>
		<div class="author"></div>
	</div>
	
	
	<section class="info">
		<p> 成长之路,厚积薄发 <br/>
			一起成长QQ群:365204530,微信技术公众号:大大家的IOS说</p>
	</section>
	 
	<div class="social-font" class="clearfix">
		
		<a href="http://weibo.com/http://http://weibo.com/hundredWin" target="_blank" class="icon-weibo" title="微博"></a>
		
		
		<a href="https://github.com/https://github.com/OneHundredSir" target="_blank" class="icon-github" title="github"></a>
		
		
		
		
		
		
		
		
		
		<a href="mailto:15507596877@139.com" target="_blank" class="icon-email" title="Email Me"></a>
		
	</div>
			
		

		<p class="copyright">
		Powered by <a href="http://hexo.io" target="_blank" title="hexo">hexo</a> and Theme by <a href="https://github.com/wuchong/jacman" target="_blank" title="Jacman">Jacman</a> © 2016 
		
		<a href="/about" target="_blank" title="Hundred Wang">Hundred Wang</a>
		
		
		</p>
</div>
</footer>
    <script src="/js/jquery-2.0.3.min.js"></script>
<script src="/js/jquery.imagesloaded.min.js"></script>
<script src="/js/gallery.js"></script>
<script src="/js/jquery.qrcode-0.12.0.min.js"></script>

<script type="text/javascript">
$(document).ready(function(){ 
  $('.navbar').click(function(){
    $('header nav').toggleClass('shownav');
  });
  var myWidth = 0;
  function getSize(){
    if( typeof( window.innerWidth ) == 'number' ) {
      myWidth = window.innerWidth;
    } else if( document.documentElement && document.documentElement.clientWidth) {
      myWidth = document.documentElement.clientWidth;
    };
  };
  var m = $('#main'),
      a = $('#asidepart'),
      c = $('.closeaside'),
      o = $('.openaside');
  c.click(function(){
    a.addClass('fadeOut').css('display', 'none');
    o.css('display', 'block').addClass('fadeIn');
    m.addClass('moveMain');
  });
  o.click(function(){
    o.css('display', 'none').removeClass('beforeFadeIn');
    a.css('display', 'block').removeClass('fadeOut').addClass('fadeIn');      
    m.removeClass('moveMain');
  });
  $(window).scroll(function(){
    o.css("top",Math.max(80,260-$(this).scrollTop()));
  });
  
  $(window).resize(function(){
    getSize(); 
    if (myWidth >= 1024) {
      $('header nav').removeClass('shownav');
    }else{
      m.removeClass('moveMain');
      a.css('display', 'block').removeClass('fadeOut');
      o.css('display', 'none');
        
    }
  });
});
</script>










<link rel="stylesheet" href="/fancybox/jquery.fancybox.css" media="screen" type="text/css">
<script src="/fancybox/jquery.fancybox.pack.js"></script>
<script type="text/javascript">
$(document).ready(function(){ 
  $('.article-content').each(function(i){
    $(this).find('img').each(function(){
      if ($(this).parent().hasClass('fancybox')) return;
      var alt = this.alt;
      if (alt) $(this).after('<span class="caption">' + alt + '</span>');
      $(this).wrap('<a href="' + this.src + '" title="' + alt + '" class="fancybox"></a>');
    });
    $(this).find('.fancybox').each(function(){
      $(this).attr('rel', 'article' + i);
    });
  });
  if($.fancybox){
    $('.fancybox').fancybox();
  }
}); 
</script>



<!-- Analytics Begin -->



<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?e6d1f421bbc9962127a50488f9ed37d1";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>



<!-- Analytics End -->

<!-- Totop Begin -->

	<div id="totop">
	<a title="返回顶部"><img src="/img/scrollup.png"/></a>
	</div>
	<script src="/js/totop.js"></script>

<!-- Totop End -->

<!-- MathJax Begin -->
<!-- mathjax config similar to math.stackexchange -->


<!-- MathJax End -->

<!-- Tiny_search Begin -->

<!-- Tiny_search End -->

  </body>
 </html>
